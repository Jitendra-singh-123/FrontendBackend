// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using one_to_oneEFWithoutFluentAPI.Data;

#nullable disable

namespace one_to_oneEFWithoutFluentAPI.Migrations
{
    [DbContext(typeof(one_to_oneEFWithoutFluentAPIContext))]
    [Migration("20240213152430_onetoone")]
    partial class onetoone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("one_to_oneEFWithoutFluentAPI.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<int>("BioId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("one_to_oneEFWithoutFluentAPI.Models.Biography", b =>
                {
                    b.Property<int>("BioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BioId"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BioId");

                    b.HasIndex("AuthorId")
                        .IsUnique();

                    b.ToTable("Biography");
                });

            modelBuilder.Entity("one_to_oneEFWithoutFluentAPI.Models.Biography", b =>
                {
                    b.HasOne("one_to_oneEFWithoutFluentAPI.Models.Author", "author")
                        .WithOne("biography")
                        .HasForeignKey("one_to_oneEFWithoutFluentAPI.Models.Biography", "AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("author");
                });

            modelBuilder.Entity("one_to_oneEFWithoutFluentAPI.Models.Author", b =>
                {
                    b.Navigation("biography")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
